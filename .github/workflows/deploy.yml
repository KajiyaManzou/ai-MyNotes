name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Publish
      run: dotnet publish ai-MyNotes/ai-MyNotes.csproj -c Release -o dist/

    - name: Verify publish output
      run: |
        echo "Checking published files..."
        ls -la dist/
        echo "Checking wwwroot directory..."
        ls -la dist/wwwroot/ | head -10
        echo "Checking critical files..."
        ls -la dist/wwwroot/index.html dist/wwwroot/manifest.json || echo "Some files missing"

    - name: Setup base path for GitHub Pages
      run: |
        echo "Setting up GitHub Pages deployment paths..."
        
        # Get repository name safely
        REPO_NAME="${{ github.event.repository.name }}"
        echo "Repository name: $REPO_NAME"
        
        # Check if files exist before modification
        if [ -f "dist/wwwroot/index.html" ]; then
          sed -i "s|<base href=\"/\" />|<base href=\"/$REPO_NAME/\" />|g" dist/wwwroot/index.html
          echo "Updated base href in index.html"
        else
          echo "Warning: index.html not found"
        fi
        
        if [ -f "dist/wwwroot/manifest.json" ]; then
          sed -i "s|\"start_url\": \"./\"|\"start_url\": \"/$REPO_NAME/\"|g" dist/wwwroot/manifest.json
          sed -i "s|\"scope\": \"./\"|\"scope\": \"/$REPO_NAME/\"|g" dist/wwwroot/manifest.json
          echo "Updated paths in manifest.json"
        else
          echo "Warning: manifest.json not found"
        fi

    - name: Add .nojekyll file
      run: touch dist/wwwroot/.nojekyll

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'dist/wwwroot'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4